/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | www.openfoam.com
     \\/     M anipulation  |
-------------------------------------------------------------------------------
    Copyright (C) 2011-2016 OpenFOAM Foundation
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

\*---------------------------------------------------------------------------*/

#ifndef makeParcelCollisionModels_H
#define makeParcelCollisionModels_H

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "NoCollision.H"
#include "PairCollision.H"

#include "PairSpringSliderDashpot.H"

#include "WallSpringSliderDashpot.H"
#include "WallLocalSpringSliderDashpot.H"


#define makePairModel2(CloudType)                                               \
                                                                               \
    typedef Foam::CloudType::collidingCloudType collidingCloudType;            \
    defineNamedTemplateTypeNameAndDebug(Foam::PairModel<collidingCloudType>, 0); \
                                                                               \
    namespace Foam                                                             \
    {                                                                          \
        defineTemplateRunTimeSelectionTable                                    \
        (                                                                      \
            PairModel<collidingCloudType>,                                        \
            dictionary                                                         \
        );                                                                     \
    }


#define makePairModelType2(SS, CloudType)                                       \
                                                                               \
    typedef Foam::CloudType::collidingCloudType collidingCloudType;            \
    defineNamedTemplateTypeNameAndDebug(Foam::SS<collidingCloudType>, 0);         \
                                                                               \
    Foam::PairModel<Foam::CloudType>::                                         \
        adddictionaryConstructorToTable<Foam::SS<collidingCloudType>>             \
        add##SS##CloudType##collidingCloudType##ConstructorToTable_;


#define makeWallModel2(CloudType)                                               \
                                                                               \
    typedef Foam::CloudType::collidingCloudType collidingCloudType;            \
    defineNamedTemplateTypeNameAndDebug(Foam::WallModel<collidingCloudType>, 0); \
                                                                               \
    namespace Foam                                                             \
    {                                                                          \
        defineTemplateRunTimeSelectionTable                                    \
        (                                                                      \
            WallModel<collidingCloudType>,                                        \
            dictionary                                                         \
        );                                                                     \
    }


#define makeWallModelType2(SS, CloudType)                                       \
                                                                               \
    typedef Foam::CloudType::collidingCloudType collidingCloudType;            \
    defineNamedTemplateTypeNameAndDebug(Foam::SS<collidingCloudType>, 0);         \
                                                                               \
    Foam::WallModel<Foam::CloudType>::                                         \
        adddictionaryConstructorToTable<Foam::SS<collidingCloudType>>             \
            add##SS##CloudType##collidingCloudType##ConstructorToTable_;



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#define makeParcelCollisionModels(CloudType)                                   \
                                                                               \
    makeCollisionModel(CloudType);                                             \
    makeCollisionModelType(NoCollision, CloudType);                            \
    makeCollisionModelType(PairCollision, CloudType);                          \
    makePairModel2(CloudType);                                                  \
    makePairModelType2(PairSpringSliderDashpot, CloudType);                     \
                                                                               \
    makeWallModel2(CloudType);                                                  \
    makeWallModelType2(WallSpringSliderDashpot, CloudType);                     \
    makeWallModelType2(WallLocalSpringSliderDashpot, CloudType);


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
